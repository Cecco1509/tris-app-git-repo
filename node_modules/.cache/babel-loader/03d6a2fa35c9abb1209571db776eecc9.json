{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzoceccotti/DevProjects/my-app/src/tris.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tris() {\n  _s();\n\n  const [current, setCurrent] = useState(\"X\");\n  const [turn, setTurn] = useState(0);\n  const [matrix, setMatrix] = useState([[\" \", \" \", \" \"], [\" \", \" \", \" \"], [\" \", \" \", \" \"]]);\n\n  const checkWin = () => {\n    return true;\n  };\n\n  const update = (i, j) => {\n    if (matrix[i][j] !== \" \") return;\n    let updatedMatrix = matrix;\n    updatedMatrix[i][j] = current;\n    setMatrix(updatedMatrix);\n    setTurn(turn + 1);\n    current === \"X\" ? setCurrent(\"O\") : setCurrent(\"X\");\n    if (turn < 3) return;\n    checkWin();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(0, 0),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[0][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(0, 1),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[0][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(0, 2),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[0][2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(1, 0),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[1][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(1, 1),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[1][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(1, 2),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[1][2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(2, 0),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[2][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(2, 1),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[2][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => update(2, 2),\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: matrix[2][2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Turno di \", current, \", n\\xB0 \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tris, \"Pow7JzHJXQMhlFeALTrg5azit8I=\");\n\n_c = Tris;\nexport default Tris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tris\");","map":{"version":3,"sources":["/Users/lorenzoceccotti/DevProjects/my-app/src/tris.tsx"],"names":["React","useState","Tris","current","setCurrent","turn","setTurn","matrix","setMatrix","checkWin","update","i","j","updatedMatrix"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nexport function Tris() {\n    const [current, setCurrent] = useState(\"X\");\n    const [turn, setTurn] = useState(0);\n    const [matrix, setMatrix] = useState([\n        [\" \",\" \",\" \"],\n        [\" \",\" \",\" \"],\n        [\" \",\" \",\" \"],\n    ]);\n\n    const checkWin = ():boolean => {\n        return true;\n    };\n\n    const update = (i:number, j:number):any => {\n        if (matrix[i][j] !== \" \") return;\n        let updatedMatrix:string[][] = matrix;\n        updatedMatrix[i][j] = current;\n        setMatrix(updatedMatrix);\n        setTurn(turn + 1);\n        current === \"X\" ? setCurrent(\"O\") : setCurrent(\"X\");\n        if(turn < 3) return;\n        checkWin(); \n    }\n\n    return (\n        <div\n            className=\"Game\"\n        >\n            <div\n                className=\"grid\"\n            >\n                <div onClick={() => update(0,0)} className=\"tile\">\n                    <h1>{matrix[0][0]}</h1>\n                </div>\n                <div onClick={() => update(0,1)} className=\"tile\">\n                    <h1>{matrix[0][1]}</h1>\n                </div>\n                <div onClick={() => update(0,2)} className=\"tile\">\n                    <h1>{matrix[0][2]}</h1>\n                </div>\n                <div onClick={() => update(1,0)} className=\"tile\">\n                    <h1>{matrix[1][0]}</h1>\n                </div>\n                <div onClick={() => update(1,1)} className=\"tile\">\n                    <h1>{matrix[1][1]}</h1>\n                </div>\n                <div onClick={() => update(1,2)} className=\"tile\">\n                    <h1>{matrix[1][2]}</h1>\n                </div>\n                <div onClick={() => update(2,0)} className=\"tile\">\n                    <h1>{matrix[2][0]}</h1>\n                </div>\n                <div onClick={() => update(2,1)} className=\"tile\">\n                    <h1>{matrix[2][1]}</h1>\n                </div>\n                <div onClick={() => update(2,2)} className=\"tile\">\n                    <h1>{matrix[2][2]}</h1>\n                </div>\n            </div>\n            <br/>\n            <h2>Turno di {current}, n° {turn}</h2>\n        </div>\n    );\n}\n\nexport default Tris;"]},"metadata":{},"sourceType":"module"}